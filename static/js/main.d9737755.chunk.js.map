{"version":3,"sources":["store/index.js","components/index.js","utils/colors.js","screens/SplashScreen.js","screens/Login.js","components/GameList.js","screens/Selection.js","utils/puzzleUtil.js","components/Puzzle.js","screens/Prize.js","utils/index.js","screens/Game.js","screens/Redeem.js","screens/Lose.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","Background","styled","div","_templateObject","Button","button","_templateObject2","props","disabled","Logo","img","_templateObject3","defaultProps","src","Icon","_templateObject4","Header","_templateObject5","Panel","_templateObject6","H1","h1","_templateObject7","H2","h2","_templateObject8","PuzzleCard","_templateObject9","selected","Timer","_templateObject10","_templateObject11","Message","_templateObject12","ModalBox","_templateObject13","VerticalCenter","_templateObject14","withRouter","_ref","history","_useContext","useContext","loading","isLoggedIn","useEffect","push","react_default","a","createElement","setIsLoggedIn","setUser","user","onClick","window","FB","login","_ref2","status","authResponse","scope","index_es","icon","faFacebookF","GameList","games","selectedGame","setSelectedGame","style","marginBottom","react_carousel_default","infinite","slidesPerPage","map","card","index","isSelected","key","concat","console","log","handleSelect","padding","url","game","Number","isInteger","sleep","milliseconds","Promise","resolve","setTimeout","manhattanCost","goalArr","curArr","count","i","length","j","k","f","Math","abs","moves","moveUp","blankElement","newCurArr","JSON","parse","stringify","moved","y","x","moveDown","moveLeft","moveRight","Piece","image","size","side","isOver","position","width","height","backgroundImage","backgroundSize","backgroundPosition","opacity","cursor","outline","Cell","animationTime","level","max","pos","floor","className","puzzleUtil_Piece","Puzzle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generatePuzzle","newArr","newBlankElement","moveFunc","PuzzleUtil","iterations","random","nextMove","_moveFunc$nextMove","_moveFunc$nextMove2","slicedToArray","newestArr","solvePuzzle","root","maxSteps","skipBranch","setState","isSolvingPuzzle","_ref3","_ref4","_PuzzleUtil$moveUp","_PuzzleUtil$moveUp2","up","movedUP","_PuzzleUtil$moveDown","_PuzzleUtil$moveDown2","down","movedDOWN","_PuzzleUtil$moveLeft","_PuzzleUtil$moveLeft2","left","movedLEFT","_PuzzleUtil$moveRight","_PuzzleUtil$moveRight2","right","movedRIGHT","costs","apply","toConsumableArray","minCost","indexOf","min","newSkipBranch","then","shuffledBoard","err","moveCurrentTile","tilePos","blankElementPos","direction","handleClick","param","e","target","_this$moveCurrentTile","state","_this$moveCurrentTile2","patternBoard","animateMovement","removeClass","_ref5","callback","_ref6","classList","add","remove","_this$generatePuzzle","_this$generatePuzzle2","newPuzzle","prevProps","prevState","_this2","maxIterations","_this$generatePuzzle3","_this$generatePuzzle4","_this3","_this$props","squares","arr","element","dist","transition","puzzleUtil_Cell","_","flatten","display","flexWrap","alignItems","justifyContent","margin","boxShadow","border","boxSizing","borderRadius","renderSquares","Component","Container","Prize_templateObject","getRandomInt","ceil","ProfilePicture","Game_templateObject","_useState","useState","_useState2","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setGame","_useState9","_useState10","background","setBackground","match","params","handleLogout","logout","response","react_router_dom","to","profile","picture","data","renderUserInfo","message1","dist_index_es","date","Date","now","intervalDelay","precision","renderer","completed","total","react_router","pathname","moment","utc","format","components_Puzzle","innerWidth","marginTop","message2","Redeem_Container","Redeem_templateObject","Lose_Container","Lose_templateObject","FB_APP_ID","App","setLoading","fbAsyncInit","init","appId","autoLogAppEvents","xfbml","version","getLoginStatus","statusChangeCallback","queryUserData","api","userID","fields","userProfile","id","objectSpread","checkAuth","store","Provider","value","basename","path","exact","component","SplashScreen","Login","Selection","Game","Prize","Redeem","Lose","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9737755.chunk.js","sourcesContent":["import React from 'react';\n\nconst defaultValues = {};\n\nconst Store = React.createContext(defaultValues);\n\nexport default Store;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { PURPLE, LIGHT_PURPLE } from '../utils/colors';\n\nexport const Background = styled.div`\n  min-height: 100vh;\n  background-size: 100%;\n  background-image: url('/images/background.png');\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Button = styled.button`\n  outline: none;\n  background-color: ${PURPLE};\n  border-radius: 50px;\n  border: none;\n  padding: 12px 24px;\n  color: white;\n  font-family: 'Quicksand', sans-serif;\n  font-size: 14px;\n  font-weight: bold;\n  opacity: ${props => (props.disabled ? 0.6 : 1)};\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const Logo = styled.img`\n  width: 280px;\n`;\n\nLogo.defaultProps = {\n  src: '/images/logo.svg',\n};\n\nexport const Icon = styled.div`\n  background-image: url(${props => props.src});\n  width: 100px;\n  height: 100px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nIcon.defaultProps = {\n  src: '/images/icon.svg',\n};\n\nexport const Header = styled.div`\n  display: flex;\n  padding: 40;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Panel = styled.div`\n  background-image: url(${props => props.src});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  border-radius: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  flex-direction: column;\n  padding: 40px;\n  margin: 0 30px;\n  margin-bottom: 60px;\n`;\n\nPanel.defaultProps = {\n  src: '/images/panel-bg.png',\n};\n\nexport const H1 = styled.h1`\n  margin: 0;\n`;\n\nexport const H2 = styled.h2`\n  margin: 0;\n`;\n\nexport const PuzzleCard = styled.div`\n  width: 100px;\n  height: 100px;\n  background-image: url(${props => props.src});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 45%;\n  border-radius: 50%;\n  background-color: ${props => props.selected ? PURPLE : LIGHT_PURPLE};\n  transition: 100ms;\n`;\n\nexport const CarouselRow = styled.div``;\n\nexport const Timer = styled.h1`\n  color: ${PURPLE};\n  font-family: 'Quicksand', sans-serif;\n`;\n\nexport const Message = styled.div`\n  color: ${PURPLE};\n  font-weight: bold;\n  margin: 40px;\n  border-radius: 100px;\n`;\n\nexport const ModalBox = styled.div`\n  background-color: white;\n  border-radius: 40px;\n  margin: 0 60px;\n  padding: 32px;\n  font-family: 'Quicksand', sans-serif;\n  font-weight: bold;\n  font-size: 20px;\n  color: ${PURPLE};\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n  height: 50vh;\n  justify-content: space-between;\n`;\n\nexport const VerticalCenter = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n","export const PURPLE = '#753cbe';\nexport const BLUE = '#5fcfe3';\nexport const RED = '#ff595a';\nexport const YELLOW = '#ffe80b';\nexport const LIGHT_PURPLE = '#c7b4ea';\n","import React, { useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Store from '../store';\nimport { Background } from '../components';\n\nexport default withRouter(function Index({ history }) {\n  const { loading, isLoggedIn } = useContext(Store);\n  useEffect(() => {\n    if (!loading) {\n      if (isLoggedIn) {\n        history.push('selection');\n      } else {\n        history.push('login');\n      }\n    }\n  });\n  return <Background>Loading</Background>;\n});\n","import React, { useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons';\nimport Store from '../store';\nimport { Background, Button, Logo } from '../components';\n\nexport default withRouter(function Login({ history }) {\n  const { setIsLoggedIn, setUser, isLoggedIn, user } = useContext(Store);\n\n  const handleLogin = () => {\n    window.FB.login(\n      ({ status, authResponse }) => {\n        setIsLoggedIn(status === 'connected');\n        if (authResponse) {\n          setUser(authResponse);\n          history.push('/selection');\n        }\n      },\n      { scope: 'public_profile,email' },\n    );\n  };\n\n  const handleLogout = () => {\n    window.FB.logout(response => {\n      setIsLoggedIn(false);\n      setUser(null);\n    });\n  };\n  return (\n    <Background>\n      <Logo />\n      <Button onClick={handleLogin}>\n        <FontAwesomeIcon icon={faFacebookF} /> Ingresar con Facebook\n      </Button>\n    </Background>\n  );\n});\n","import React, { useContext } from 'react';\nimport Carousel, { Dots } from '@brainhubeu/react-carousel';\nimport { PuzzleCard, CarouselRow } from './index';\nimport Store from '../store';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nexport default function GameList({ games }) {\n  const { selectedGame, setSelectedGame } = useContext(Store);\n\n  const handleSelect = (card, index) => {\n    console.log('handleSelect', card, index);\n    setSelectedGame(index);\n  };\n\n  const renderCards = () => {\n    return games.map((card, index) => {\n      const isSelected = selectedGame === index;\n\n      return (\n        <div\n          key={`key_${index}`}\n          onClick={() => handleSelect(card, index)}\n          style={{ padding: 8 }}\n        >\n          <PuzzleCard selected={isSelected} src={card.url} />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div style={{ marginBottom: 24 }}>\n      <Carousel infinite slidesPerPage={3}>\n        {renderCards()}\n      </Carousel>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Button, Header, Icon, Panel, H1, H2 } from '../components';\nimport GameList from '../components/GameList';\nimport Store from '../store';\n\nexport default withRouter(function Selection({ history }) {\n  const { selectedGame, games } = useContext(Store);\n  const handlePlay = () => {\n    const game = games[selectedGame];\n    console.log('Play', game);\n    history.push(`/game/${selectedGame}`);\n  };\n  return (\n    <div>\n      <Header>\n        <Icon />\n      </Header>\n      <Panel>\n        <H1>¡Gana jugando!</H1>\n        <H2>Elige tu premio</H2>\n      </Panel>\n      <GameList games={games} />\n      <Button onClick={handlePlay} disabled={!Number.isInteger(selectedGame)}>\n        Jugar\n      </Button>\n    </div>\n  );\n});\n","import React, { Component } from 'react';\n\nconst sleep = milliseconds =>\n  new Promise(resolve => setTimeout(resolve, milliseconds));\n\nconst manhattanCost = (goalArr, curArr) => {\n  let count = 0;\n\n  for (let i = 0; i < curArr.length; i++) {\n    for (let j = 0; j < curArr[i].length; j++) {\n      if (curArr[i][j] !== goalArr[i][j] && curArr[i][j] !== '') {\n        for (let k = 0; k < goalArr.length; k++) {\n          for (let f = 0; f < goalArr[k].length; f++) {\n            if (goalArr[k][f] === curArr[i][j]) {\n              count += Math.abs(k - i) + Math.abs(f - j);\n            }\n          }\n        }\n      }\n    }\n  }\n  return count;\n};\n\nconst moves = ['up', 'down', 'left', 'right'];\n\nconst moveUp = (blankElement, curArr) => {\n  const newCurArr = JSON.parse(JSON.stringify(curArr));\n  let moved = false;\n  if (\n    blankElement.y - 1 >= 0 &&\n    curArr[blankElement.y - 1][blankElement.x] !== ''\n  ) {\n    newCurArr[blankElement.y][blankElement.x] =\n      newCurArr[blankElement.y - 1][blankElement.x];\n    newCurArr[blankElement.y - 1][blankElement.x] = '';\n    moved = true;\n  }\n  return [newCurArr, moved];\n};\n\nconst moveDown = (blankElement, curArr) => {\n  const newCurArr = JSON.parse(JSON.stringify(curArr));\n  let moved = false;\n  if (\n    blankElement.y + 1 < curArr.length &&\n    curArr[blankElement.y + 1][blankElement.x] !== ''\n  ) {\n    newCurArr[blankElement.y][blankElement.x] =\n      newCurArr[blankElement.y + 1][blankElement.x];\n    newCurArr[blankElement.y + 1][blankElement.x] = '';\n    moved = true;\n  }\n  return [newCurArr, moved];\n};\n\nconst moveLeft = (blankElement, curArr) => {\n  const newCurArr = JSON.parse(JSON.stringify(curArr));\n  let moved = false;\n  if (\n    blankElement.x - 1 >= 0 &&\n    curArr[blankElement.y][blankElement.x - 1] !== ''\n  ) {\n    newCurArr[blankElement.y][blankElement.x] =\n      newCurArr[blankElement.y][blankElement.x - 1];\n    newCurArr[blankElement.y][blankElement.x - 1] = '';\n    moved = true;\n  }\n  return [newCurArr, moved];\n};\n\nconst moveRight = (blankElement, curArr) => {\n  const newCurArr = JSON.parse(JSON.stringify(curArr));\n  let moved = false;\n  if (\n    blankElement.x + 1 < curArr[blankElement.y].length &&\n    curArr[blankElement.y][blankElement.x + 1] !== ''\n  ) {\n    newCurArr[blankElement.y][blankElement.x] =\n      newCurArr[blankElement.y][blankElement.x + 1];\n    newCurArr[blankElement.y][blankElement.x + 1] = '';\n    moved = true;\n  }\n  return [newCurArr, moved];\n};\n\nconst Piece = props => {\n  const { image, size, side, x, y, blankElement, isOver, position } = props;\n  return (\n    <div\n      style={{\n        width: `${side}px`,\n        height: `${side}px`,\n        // margin: '0 -1px -1px',\n        // border: '1px solid black',\n        backgroundImage: (position !== 8 || isOver) && `url(${image})`,\n        backgroundSize: `${size}px ${size}px`,\n        backgroundPosition: `-${x}px -${y}px`,\n        opacity: `${isOver || !blankElement ? '1' : '0.2'}`,\n        cursor: `${blankElement ? 'default' : 'hover'}`,\n        outline: 'none',\n      }}\n    />\n  );\n};\n\nconst Cell = props => {\n  const { animationTime, image, size, level, position, max, isOver } = props;\n  const side = size / level;\n  const blankElement = position === '';\n  const pos = blankElement ? max : position;\n  const x = (pos % level) * side;\n  const y = Math.floor(pos / level) * side;\n\n  return (\n    <div className='piece'>\n      <Piece\n        position={pos}\n        image={image}\n        size={size}\n        side={side}\n        x={x}\n        y={y}\n        blankElement={blankElement}\n        isOver={isOver}\n      />\n\n      <style>{`\n          .move-up {\n            transition: ${animationTime}ms;\n            transform: translateY(-${side}px);\n          }\n          .move-right {\n            transition: ${animationTime}ms;\n            transform: translateX(${side}px);\n          }\n          .move-down {\n            transition: ${animationTime}ms;\n            transform: translateY(${side}px);\n          }\n          .move-left {\n            transition: ${animationTime}ms;\n            transform: translateX(-${side}px);\n          }\n         \n        `}</style>\n    </div>\n  );\n};\n\nexport {\n  sleep,\n  manhattanCost,\n  moves,\n  moveUp,\n  moveDown,\n  moveLeft,\n  moveRight,\n  Cell,\n  Piece,\n};\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as PuzzleUtil from '../utils/puzzleUtil';\nimport { Clickable } from 'react-clickable';\nimport { withRouter } from 'react-router-dom';\n\nclass Puzzle extends Component {\n  constructor(props) {\n    super(props);\n    const [blankElement, newArr] = this.generatePuzzle({ x: 2, y: 2 }, [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, ''],\n    ]);\n    this.state = {\n      isOver: false,\n      isSolvingPuzzle: false,\n      newPuzzle: false,\n      patternBoard: [[0, 1, 2], [3, 4, 5], [6, 7, '']],\n      shuffledBoard: newArr,\n      blankElement: blankElement,\n    };\n    this.animationTime = 200;\n  }\n\n  generatePuzzle = (blankElement, goalArr) => {\n    let newArr = JSON.parse(JSON.stringify(goalArr));\n    let newBlankElement = JSON.parse(JSON.stringify(blankElement));\n    const moveFunc = [\n      PuzzleUtil.moveUp,\n      PuzzleUtil.moveDown,\n      PuzzleUtil.moveLeft,\n      PuzzleUtil.moveRight,\n    ];\n    const max = 300;\n    const min = 1;\n    const iterations = Math.floor(Math.random() * (max - min + 1)) + min;\n\n    for (let i = 0; i < iterations; i++) {\n      const nextMove = Math.floor(Math.random() * (3 - 0 + 1)) + 0;\n      const [newestArr, moved] = moveFunc[nextMove](newBlankElement, newArr);\n      if (moved) {\n        newArr = newestArr;\n        switch (PuzzleUtil.moves[nextMove]) {\n          case 'up':\n            newBlankElement.x = newBlankElement.x;\n            newBlankElement.y = newBlankElement.y - 1;\n            break;\n          case 'down':\n            newBlankElement.x = newBlankElement.x;\n            newBlankElement.y = newBlankElement.y + 1;\n            break;\n          case 'left':\n            newBlankElement.x = newBlankElement.x - 1;\n            newBlankElement.y = newBlankElement.y;\n            break;\n          case 'right':\n            newBlankElement.x = newBlankElement.x + 1;\n            newBlankElement.y = newBlankElement.y;\n            break;\n        }\n      }\n    }\n    return [newBlankElement, newArr];\n  };\n\n  solvePuzzle = (goalArr, root, maxSteps, skipBranch, blankElement, curArr) => {\n    if (PuzzleUtil.manhattanCost(goalArr, curArr) === 0) {\n      this.setState({ isOver: true, isSolvingPuzzle: false });\n      return root;\n    } else if (maxSteps === root + 1) {\n      this.setState({ isSolvingPuzzle: false });\n      return `Could not solve puzzle in ${maxSteps} iterations.`;\n    }\n    try {\n      const [up, movedUP] = PuzzleUtil.moveUp(blankElement, curArr);\n      const [down, movedDOWN] = PuzzleUtil.moveDown(blankElement, curArr);\n      const [left, movedLEFT] = PuzzleUtil.moveLeft(blankElement, curArr);\n      const [right, movedRIGHT] = PuzzleUtil.moveRight(blankElement, curArr);\n\n      let costs = [\n        skipBranch === 'up' || !movedUP\n          ? [].concat(...JSON.parse(JSON.stringify(goalArr))).length + 1000\n          : PuzzleUtil.manhattanCost(goalArr, up),\n        skipBranch === 'down' || !movedDOWN\n          ? [].concat(...JSON.parse(JSON.stringify(goalArr))).length + 1000\n          : PuzzleUtil.manhattanCost(goalArr, down),\n        skipBranch === 'left' || !movedLEFT\n          ? [].concat(...JSON.parse(JSON.stringify(goalArr))).length + 1000\n          : PuzzleUtil.manhattanCost(goalArr, left),\n        skipBranch === 'right' || !movedRIGHT\n          ? [].concat(...JSON.parse(JSON.stringify(goalArr))).length + 1000\n          : PuzzleUtil.manhattanCost(goalArr, right),\n      ];\n\n      const minCost = PuzzleUtil.moves[costs.indexOf(Math.min(...costs))];\n\n      const pos = {};\n      let newCurArr = [];\n      let newSkipBranch = 'none';\n      switch (minCost) {\n        case 'up':\n          pos.x = blankElement.x;\n          pos.y = blankElement.y - 1;\n          newCurArr = up;\n          newSkipBranch = 'down';\n          break;\n        case 'down':\n          pos.x = blankElement.x;\n          pos.y = blankElement.y + 1;\n          newCurArr = down;\n          newSkipBranch = 'up';\n          break;\n        case 'left':\n          pos.x = blankElement.x - 1;\n          pos.y = blankElement.y;\n          newCurArr = left;\n          newSkipBranch = 'right';\n          break;\n        case 'right':\n          pos.x = blankElement.x + 1;\n          pos.y = blankElement.y;\n          newCurArr = right;\n          newSkipBranch = 'left';\n          break;\n      }\n\n      PuzzleUtil.sleep(500).then(() => {\n        this.setState({ shuffledBoard: newCurArr, blankElement: pos });\n        return this.solvePuzzle(\n          goalArr,\n          root + 1,\n          maxSteps,\n          newSkipBranch,\n          pos,\n          newCurArr,\n        );\n      });\n    } catch (err) {\n      this.setState({ isSolvingPuzzle: false });\n      return err;\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.solvePuzzle !== this.props.solvePuzzle &&\n      this.state.isSolvingPuzzle === false\n    ) {\n      this.setState({ isSolvingPuzzle: true }, () => {\n        this.solvePuzzle(\n          this.state.patternBoard,\n          0,\n          this.props.maxIterations || 50,\n          'none',\n          this.state.blankElement,\n          this.state.shuffledBoard,\n        );\n      });\n    }\n\n    if (prevProps.newPuzzle !== this.props.newPuzzle) {\n      const [blankElement, newArr] = this.generatePuzzle({ x: 2, y: 2 }, [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, ''],\n      ]);\n      this.setState({\n        isOver: false,\n        shuffledBoard: newArr,\n        blankElement: blankElement,\n      });\n    }\n  }\n\n  moveCurrentTile = (tilePos, blankElementPos, curArr) => {\n    const newCurArr = JSON.parse(JSON.stringify(curArr));\n    let moved = false;\n    let direction = 'up';\n    if (\n      tilePos.y === blankElementPos.y &&\n      (tilePos.x === blankElementPos.x - 1 ||\n        tilePos.x === blankElementPos.x + 1)\n    ) {\n      const isPositive = tilePos.x < blankElementPos.x;\n      direction = isPositive ? 'right' : 'left';\n      console.log('MOVED_X', direction);\n      newCurArr[blankElementPos.y][blankElementPos.x] =\n        newCurArr[tilePos.y][tilePos.x];\n      newCurArr[tilePos.y][tilePos.x] = '';\n      moved = true;\n    } else if (\n      tilePos.x === blankElementPos.x &&\n      (tilePos.y === blankElementPos.y - 1 ||\n        tilePos.y === blankElementPos.y + 1)\n    ) {\n      const isPositive = tilePos.y > blankElementPos.y;\n      direction = isPositive ? 'up' : 'down';\n      console.log('MOVED_Y', direction);\n      newCurArr[blankElementPos.y][blankElementPos.x] =\n        newCurArr[tilePos.y][tilePos.x];\n      newCurArr[tilePos.y][tilePos.x] = '';\n      moved = true;\n    }\n    return [newCurArr, moved, direction];\n  };\n\n  handleClick = param => e => {\n    const target = e.target;\n    console.log('handleClick', target);\n    const [newCurArr, moved, direction] = this.moveCurrentTile(\n      param,\n      this.state.blankElement,\n      this.state.shuffledBoard,\n    );\n    const isOver =\n      JSON.stringify(newCurArr) === JSON.stringify(this.state.patternBoard);\n\n    if (moved) {\n      this.animateMovement([direction, target], removeClass => {\n        this.setState(\n          { shuffledBoard: newCurArr, blankElement: param, isOver },\n          () => {\n            removeClass();\n            if (isOver) {\n              this.props.history.push('/won');\n            }\n          },\n        );\n      });\n    }\n  };\n\n  animateMovement = ([direction, target], callback) => {\n    target.classList.add('move-' + direction);\n    setTimeout(() => {\n      callback(() => {\n        target.classList.remove('move-' + direction);\n      });\n    }, this.animationTime);\n  };\n\n  renderSquares() {\n    const { image, size, level } = this.props;\n    const positions = this.state.shuffledBoard;\n    const squares = positions.map((arr, y) => {\n      return arr.map((element, x) => {\n        return (\n          <Clickable\n            style={{\n              outline: 'none',\n              transition: 'transform 0.2s, background 0.2s',\n            }}\n            key={element}\n            onClick={this.handleClick({ x, y })}\n          >\n            <PuzzleUtil.Cell\n              animationTime={this.animationTime}\n              key={element}\n              size={size}\n              image={image}\n              level={3}\n              position={element}\n              max={_.flatten(this.state.patternBoard).length - 1}\n              isOver={this.state.isOver}\n            />\n          </Clickable>\n        );\n      });\n    });\n\n    return _.flatten(squares);\n  }\n\n  render() {\n    const size = this.props.size;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          padding: 0,\n          width: `${size}px`,\n          height: `${size}px`,\n          alignItems: 'center',\n          justifyContent: 'center',\n          margin: 'auto',\n          boxShadow: '#00000052 5px 5px 24px 1px',\n          border: '2px solid #00000082',\n          boxSizing: 'content-box',\n          borderRadius: 2,\n        }}\n      >\n        {this.renderSquares()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Puzzle);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LIGHT_PURPLE } from '../utils/colors';\nimport { Button, ModalBox, Header, Icon, VerticalCenter } from '../components';\nimport { withRouter } from 'react-router-dom';\nexport default withRouter(function Prize({ history }) {\n  const handleClaim = () => {\n    history.push('/redeem');\n  };\n  return (\n    <Container>\n      <Header>\n        <Icon />\n      </Header>\n      <VerticalCenter>\n        <ModalBox>\n          ¡Felicidades!\n          <img style={{ position: 'absolute' }} src='/images/price.svg' />\n          <Button onClick={handleClaim}>Obtener premio</Button>\n        </ModalBox>\n      </VerticalCenter>\n    </Container>\n  );\n});\n\nconst Container = styled.div`\n  background-color: ${LIGHT_PURPLE};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n","export function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport Countdown from 'react-countdown-now';\nimport Store from '../store';\nimport Puzzle from '../components/Puzzle';\nimport { Header, Icon, Button, Timer, Message } from '../components';\nimport Prize from './Prize';\nimport { getRandomInt } from '../utils';\n\nfunction Game(props) {\n  const [solvePuzzle, setSolvePuzzle] = useState(false);\n  const [newPuzzle, setNewPuzzle] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [game, setGame] = useState();\n  const [background, setBackground] = useState(getRandomInt(1, 3));\n  const { user, setUser, selectedGame, setSelectedGame, games } = useContext(Store);\n\n  useEffect(() => {\n    setBackground(getRandomInt(1, games.length));\n  }, []);\n\n  useEffect(() => {\n    setSelectedGame(props.match.params.game);\n    setGame(games[selectedGame]);\n    if (!user) {\n      props.history.push('/login');\n    }\n  });\n\n  const handleLogout = () => {\n    window.FB.logout(response => {\n      setIsLoggedIn(false);\n      setUser(null);\n    });\n  };\n\n  const renderFacebookButton = () => {\n    return <Button onClick={handleLogout}>Logout</Button>;\n  };\n\n  const renderUserInfo = () => {\n    const url = user && user.profile && user.profile.picture.data.url;\n    return (\n      <div>\n        <ProfilePicture src={url} />;\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header>\n        <Link to={'/selection'}>\n          <Icon />\n        </Link>\n        {renderUserInfo()}\n      </Header>\n      <main>\n        <div>\n          <div>\n            <Message>\n              {game && game.message1}\n            </Message>\n            <Countdown\n              date={Date.now() + 1000 * 1 * 5}\n              intervalDelay={0}\n              precision={3}\n              renderer={({ completed, total }) => {\n                if (completed) {\n                  return <Redirect\n                    to={{\n                      pathname: '/lose',\n                    }}\n                  />;\n                }\n                return <Timer>{moment.utc(total).format('mm:ss')}</Timer>;\n              }}\n            />\n            <Puzzle\n              solvePuzzle={solvePuzzle}\n              newPuzzle={newPuzzle}\n              maxIterations={300}\n              image={`/images/puzzle${background}.png`}\n              size={window.innerWidth - 100}\n            />\n            {renderFacebookButton()}\n            <Message style={{ marginTop: 20 }}>\n              {game && game.message2}\n            </Message>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nconst ProfilePicture = styled.img`\n  border-radius: 100px;\n  margin-right: 8px;\n`;\n\nexport default withRouter(Game);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LIGHT_PURPLE } from '../utils/colors';\nimport { Button, ModalBox, Header, Icon, VerticalCenter } from '../components';\nimport { withRouter } from 'react-router-dom';\nexport default withRouter(function Prize({ history }) {\n  const handleOut = () => {\n    history.push('/selection');\n  };\n  return (\n    <Container>\n      <Header>\n        <Icon />\n      </Header>\n      <VerticalCenter>\n        <ModalBox>\n          Postre gratis\n          <img width={100} src='/images/cupcake.svg' />\n          <Button onClick={handleOut}>231015</Button>\n          <img width={'100%'} src='/images/barcode.svg' />\n        </ModalBox>\n      </VerticalCenter>\n    </Container>\n  );\n});\n\nconst Container = styled.div`\n  background-color: ${LIGHT_PURPLE};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LIGHT_PURPLE } from '../utils/colors';\nimport { Button, ModalBox, Header, Icon, VerticalCenter } from '../components';\nimport { withRouter } from 'react-router-dom';\nexport default withRouter(function Prize({ history }) {\n  const handleClaim = () => {\n    history.push('/selection');\n  };\n  return (\n    <Container>\n      <Header>\n        <Icon />\n      </Header>\n      <VerticalCenter>\n        <ModalBox>\n          Perdiste mas suerte la proxima!\n          <Button onClick={handleClaim}>Salir</Button>\n        </ModalBox>\n      </VerticalCenter>\n    </Container>\n  );\n});\n\nconst Container = styled.div`\n  background-color: ${LIGHT_PURPLE};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Route, Redirect, Link } from 'react-router-dom';\nimport Store from './store';\nimport SplashScreen from './screens/SplashScreen';\nimport Login from './screens/Login';\nimport Selection from './screens/Selection';\nimport Game from './screens/Game';\nimport Prize from './screens/Prize';\nimport Redeem from './screens/Redeem';\nimport Lose from './screens/Lose';\nimport './App.css';\n\nconst FB_APP_ID = '327465451297007';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [selectedGame, setSelectedGame] = useState();\n  const games = [\n    {\n      url: '/images/p1.svg',\n      message1: 'Ordena las partes para completar la imagen antes de que el tiempo se agote',\n      message2: '!Estas jugando por un postre gratis!',\n    },\n    {\n      url: '/images/p2.svg',\n      message1: 'Ordena las partes para completar la imagen antes de que el tiempo se agote',\n      message2: '!Estas jugando por un postre gratis!',\n    },\n    {\n      url: '/images/p3.svg',\n      message1: 'Ordena las partes para completar la imagen antes de que el tiempo se agote',\n      message2: '!Estas jugando por un postre gratis!',\n    },\n  ];\n  useEffect(() => {\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: FB_APP_ID,\n        autoLogAppEvents: true,\n        xfbml: true,\n        version: 'v3.2',\n      });\n\n      window.FB.getLoginStatus(statusChangeCallback);\n    };\n\n    if (isLoggedIn && user && !user.profile) {\n      queryUserData();\n    }\n  });\n\n  const queryUserData = () => {\n    window.FB.api(\n      `/${user.userID}`,\n      { fields: ['name', 'email', 'picture'] },\n      userProfile => {\n        console.log(userProfile);\n        if (userProfile && userProfile.id) {\n          setUser({ ...user, profile: userProfile });\n        }\n        setLoading(false);\n      },\n    );\n  };\n\n  const statusChangeCallback = ({ status, authResponse }) => {\n    const _isLoggedIn = status === 'connected';\n    setIsLoggedIn(_isLoggedIn);\n    if (authResponse) {\n      setUser(authResponse);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const checkAuth = (props, Component) => {\n    if (!isLoggedIn) {\n      return <Redirect\n        to={{\n          pathname: '/',\n        }}\n      />\n    };\n    return <Component {...props}/>\n  };\n\n  return (\n    <div className='App'>\n      <Store.Provider\n        value={{\n          setIsLoggedIn,\n          setUser,\n          setLoading,\n          loading,\n          user,\n          isLoggedIn,\n          selectedGame,\n          setSelectedGame,\n          games,\n        }}\n      >\n        <Router basename={'/hula'}>\n          <Route path='/' exact component={SplashScreen} />\n          <Route path='/login/' component={Login} />\n          <Route path='/selection/' component={props => checkAuth(props, Selection)} />\n          <Route path='/game/:game' component={props => checkAuth(props, Game)} />\n          <Route path='/won' component={props => checkAuth(props, Prize)} />\n          <Route path='/redeem' component={props => checkAuth(props, Redeem)} />\n          <Route path='/lose' component={props => checkAuth(props, Lose)} />\n        </Router>\n      </Store.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}